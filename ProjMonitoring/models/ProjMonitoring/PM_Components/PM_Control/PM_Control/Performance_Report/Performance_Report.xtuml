-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("debe4626-cfe9-48fd-8112-e083c26efc69",
	'Performance_Report',
	8,
	'PERFREP',
	'A PERFORMANCE REPORT is created for each PROJECT based on Earned Value inputs of PV, EV, AC and BAC.
All other Earned Value parameters and indices are derived from these four inputs.

This class is based on UC12, UC13, UC14, UC14-1, and UC15. ',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("963fa6c9-de69-4936-9e4d-7681eb74fb88",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	'Create',
	'This operation is based on UC12.
It creates a new report, based on Earned Value, after receiving the necessary inputs of:
1. An existing project name.
2. BAC (Budget at Completion) - precalculated.
3. EV (Earned Value) - precalculated.
4. PV (Planned Value) - precalculated.
5. AC (Actual Cost) - precalculated.

See Table 7-1, page 267 PMBoK Guide 6th Edition.',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'//Create a new performance report for a project.

//Check that the named project exists.

select any Project from instances of PRJ
 where (selected.PRJ_Name == param.PRJ_Name);

if ( not empty Project)
	
	//If it exists then check whether any performance report exists for the named project.
	//If a report doesn''t exist then create the new report with Rep_ID = 1 -
	//Remembering to also make Last_Rep_ID = 1.
	//If it does exist then create the new report with (new) Rep_ID = Last_Rep_ID + 1.
	
	select any Performance_Report from instances of PERFREP
 	where (selected.PRJ_Name == param.PRJ_Name);

	if ( empty Performance_Report)
		create object instance Performance_Report of PERFREP;
		Performance_Report.PRJ_Name = param.PRJ_Name;
		Performance_Report.Rep_ID = 1;
		
		relate Project to Performance_Report across R14.''may be recorded in'';
		
		LOG::LogInfo( message: "A PERFORMANCE REPORT has been successfully created." );
		send OrgMan::Notify(Relevant_Person:"Manager", Message:"A new PERFORMANCE REPORT " + param.PRJ_Name + "has been created.");
		
	else
		
		//Firstly find the last performance report for the project.
		
		select many Reports from instances of PERFREP
 		where (selected.PRJ_Name == param.PRJ_Name);
 	
 		last_report = 0;
		
		for each report in Reports
			if (report.Rep_ID > last_report)
				last_report = report.Rep_ID;
			end if;
		end for;
		
		//Now create a new report and incrementing the number of the last report.	

		create object instance Performance_Report of PERFREP;
		Performance_Report.PRJ_Name = param.PRJ_Name;
		Performance_Report.Rep_ID = last_report + 1;
		
		relate Project to Performance_Report across R14.''may be recorded in'';
		
		LOG::LogInfo( message: "A new empty PERFORMANCE REPORT has been successfully created." );
		send OrgMan::Notify(Relevant_Person:"Manager", Message:"A new PERFORMANCE REPORT " + param.PRJ_Name + "has been created.");
		
	end if;
	
	//Now transfer the base Earned Value parameters to the newly created report.
	
		Performance_Report.BAC = param.BAC;
		LOG::LogReal( message: "Budget At Completion is" , r: param.BAC);
		Performance_Report.EV = param.EV;
		LOG::LogReal( message: "Earned Value is" , r: param.EV);
		Performance_Report.PV = param.PV;
		LOG::LogReal( message: "Planned Value is" , r: param.PV);
		Performance_Report.AC = param.AC;
		LOG::LogReal( message: "Actual Cost is" , r: param.AC);
		
	//Calculate Variances
	
	Performance_Report.calc_EV_Variances();
	
	//Calculate Performance Indices
	
	Performance_Report.calc_EV_Perf_Indices();
	
	//Calculate Completion Estimates
	
	Performance_Report.calc_Completion_Estimates();
	
else
		LOG::LogFailure( message: "The chosen PROJECT " + param.PRJ_Name + " does not exist.  Please choose a PROJECT NAME that already exists." );
end if;
	
// Based on UC12.',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0,
	1);
INSERT INTO O_TPARM
	VALUES ("8ad6f00d-cb30-4e37-a745-f8f89c666a7d",
	"963fa6c9-de69-4936-9e4d-7681eb74fb88",
	'PRJ_Name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("270420c7-f211-4502-894a-746badc13f49",
	"963fa6c9-de69-4936-9e4d-7681eb74fb88",
	'BAC',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"8ad6f00d-cb30-4e37-a745-f8f89c666a7d",
	'');
INSERT INTO O_TPARM
	VALUES ("c47ddd9e-9401-4bae-bdfd-45e06100d5ae",
	"963fa6c9-de69-4936-9e4d-7681eb74fb88",
	'EV',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"270420c7-f211-4502-894a-746badc13f49",
	'');
INSERT INTO O_TPARM
	VALUES ("b2602f4a-ab54-4e7e-af8f-f3a981a56e98",
	"963fa6c9-de69-4936-9e4d-7681eb74fb88",
	'PV',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"c47ddd9e-9401-4bae-bdfd-45e06100d5ae",
	'');
INSERT INTO O_TPARM
	VALUES ("d5c28e30-05a4-498a-9de4-da9512611560",
	"963fa6c9-de69-4936-9e4d-7681eb74fb88",
	'AC',
	"ba5eda7a-def5-0000-0000-000000000003",
	0,
	'',
	"b2602f4a-ab54-4e7e-af8f-f3a981a56e98",
	'');
INSERT INTO O_TFR
	VALUES ("26d9a35c-572c-4fbb-b115-7d154b4dc1a4",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	'calc_EV_Variances',
	'This operation is based on UC13.
It is a continuation of the Performance_Report.Create operation and uses the Earned Value
inputs of this latter operation to calculate Cost and Schedule Variance to add to the project
Performance Report.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'//Calculate Variances relating to the current report for a specific project.

	//Now use the base Earned Value parameters to calculate the variances.
	
	//Cost Variance
	
		self.CV = self.EV - self.AC;
		
		LOG::LogReal( message: "Cost Variance has been calculate at" , r: self.CV);
		
	//Schedule Variance
		
		self.SV = self.EV - self.PV;
		
		LOG::LogReal( message: "Earned Value is" , r: self.SV);
		
	LOG::LogInfo( message: "A PERFORMANCE REPORT for " + self.PRJ_Name + " has been successfully updated with cost & schedule variances." );
	send OrgMan::Notify(Relevant_Person:"Manager", Message:"A PERFORMANCE REPORT for " + self.PRJ_Name + "has been updated with cost & schedule variances.");	

// Based on UC13.',
	1,
	'',
	"963fa6c9-de69-4936-9e4d-7681eb74fb88",
	0,
	2);
INSERT INTO O_TFR
	VALUES ("8a04eb1b-d0cd-4028-a024-000179ecda22",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	'calc_EV_Perf_Indices',
	'This operation is based on UC14.
It (also) is a continuation of the Performance_Report.Create operation after Cost & Schedule 
Variances have been calculated. It produces the Cost & Schedule Performance Indices to add to 
the project Performance Report.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'//Calculate Performance Indices relating to the current report for a specific project.

//Now use the base Earned Value parameters to calculate the performance indices.
	
//Cost Performance Index
	
	self.CPI = self.EV / self.AC;
		
	LOG::LogReal( message: "Cost Performance Index has been calculated at" , r: self.CPI);
		
	// Determine performance message content and notify manager.
	
	CPI = self.CPI;
		
	if (CPI < 0.95)
			
		LOG::LogInfo( message: "Project is OVER budget by more than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is OVER budget by more than 5%. If the project is similarly BEHIND schedule, then a replan may be required!");
			
	elif (1.0 > CPI and CPI > 0.95)
			
		LOG::LogInfo( message: "Project is OVER budget by less than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is OVER budget by less than 5%. Keep watch!");
			
			
	elif (CPI == 1.0)
		
		LOG::LogInfo( message: "Project is ON budget.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is ON budget. Excellent!");
			
			
	elif (1.0 < CPI and CPI < 1.05)
			
		LOG::LogInfo( message: "Project is UNDER budget by less than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is UNDER budget by less than 5%. Super!");
			
			
	else
			
		LOG::LogInfo( message: "Project is UNDER budget by more than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is UNDER budget by more than 5%. If the project is similarly ahead schedule, then a replan may be required!");
			
	end if;			
		
		
//Schedule Performance Index
		
	self.SPI = self.EV / self.PV;
		
	LOG::LogReal( message: "Schedule Performance Index is" , r: self.SPI);
		
	//Determine performance message content and notify manager.
		
	SPI = self.SPI;
		
	if (SPI < 0.95)
			
		LOG::LogInfo( message: "Project is BEHIND schedule by more than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is BEHIND schedule by more than 5%. If the project is similarly OVER budget, then a replan may be required!");
			
	elif (1.0 > SPI and SPI > 0.95)
			
		LOG::LogInfo( message: "Project is BEHIND schedule by less than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is BEHIND schedule by less than 5%. Keep watch!");
			
			
	elif (SPI == 1.0)
		
		LOG::LogInfo( message: "Project is ON schedule.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is ON schedule. Excellent!");
			
			
	elif (1.0 < SPI and SPI < 1.05)
			
		LOG::LogInfo( message: "Project is AHEAD of schedule by less than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is AHEAD of schedule by less than 5%. Super!");
			
	else
			
		LOG::LogInfo( message: "Project is AHEAD of schedule by more than 5%.");
			
		send PrjMan::Notify( Relevant_Person: "Manager", Message: "Project " + self.PRJ_Name + " is AHEAD of schedule by more than 5%. If the project is similarly UNDER budget, then a replan may be required!");
			
	end if;
		
// Determine the colour status of the project.  The colour is an indicator of overall performance and should be read in conjunction with the messages above.
		
	if (CPI < 0.95 and SPI < 0.95)
			
		self.Traffic_Light = Status_Colour::RED;
			
	elif (CPI > 0.95 and SPI < 0.95)
			
		if (CPI < 1.0)
			
			self.Traffic_Light = Status_Colour::AMBER;
			
		end if;
			
	elif (SPI > 0.95 and CPI < 0.95)
			
		if (SPI < 1.0)
			
			self.Traffic_Light = Status_Colour::AMBER;
			
		end if;			
			
	elif (CPI >= 1.0 and SPI > 0.95)
			
		self.Traffic_Light = Status_Colour::GREEN;

	elif (SPI >= 1.0 and CPI > 0.95)
			
		self.Traffic_Light = Status_Colour::GREEN;
			
	end if;
	
	LOG::LogInfo( message: "A PERFORMANCE REPORT for " + self.PRJ_Name + " has been successfully updated with performance indices." );
	send OrgMan::Notify(Relevant_Person:"Manager", Message:"A PERFORMANCE REPORT for " + self.PRJ_Name + " has been updated with performance indices.");
	
																									
		
//Based on UC14 and UC14-1 and includes the essential aspects of UC17 in readiness for 
//inclusion in a Summary Report.',
	1,
	'',
	"26d9a35c-572c-4fbb-b115-7d154b4dc1a4",
	0,
	3);
INSERT INTO O_TFR
	VALUES ("dbb67bda-ba2a-46cc-a034-551a233a50ca",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	'calc_Completion_Estimates',
	'This operation is based on UC15.
It (also) is a continuation of the Performance_Report.Create operation after Cost & Schedule 
Variances & Performance Indices have been calculated. It calculates the Completion Estimates to 
add to the project Performance Report.',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'//Calculate Completion Estimates relating to the current report for a specific project.
		
	LOG::LogInfo( message: "A PERFORMANCE REPORT has been successfully updated with completion estimates." );
	send OrgMan::Notify(Relevant_Person:"Manager", Message:"A PERFORMANCE REPORT " + self.PRJ_Name + "has been updated with completion estimates.");
	
//Now use the base Earned Value parameters to calculate the variances.
	
//Estimate AT Completion  -- must be calculated first.
	
	self.EAC = self.BAC / self.CPI;
		
	LOG::LogReal( message: "Estimate At Completion has been calculated at" , r: self.EAC);
		
//Variance AT Completion
		
	self.VAC = self.BAC - self.EAC;
		
	LOG::LogReal( message: "Variance At Completion is" , r: self.VAC);
		
//Estimate TO Complete
		
	self.ETC = self.EAC - self.AC;
		
	LOG::LogReal( message: "Estimate to Complete is" , r: self.ETC);		

	LOG::LogInfo( message: "A PERFORMANCE REPORT has been successfully updated with completion estimates." );
	send OrgMan::Notify(Relevant_Person:"Manager", Message:"A PERFORMANCE REPORT for " + self.PRJ_Name + "has been updated with completion estimates.");
	
// Based on UC15.',
	1,
	'',
	"8a04eb1b-d0cd-4028-a024-000179ecda22",
	0,
	5);
INSERT INTO O_NBATTR
	VALUES ("76434f9b-b069-4b88-92d7-3a523a006d3c",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("76434f9b-b069-4b88-92d7-3a523a006d3c",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("76434f9b-b069-4b88-92d7-3a523a006d3c",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"00000000-0000-0000-0000-000000000000",
	'BAC',
	'The Earned Value parameter for Budget At Completion.  The first use of BAC value will correspond to the estimated total cost to complete the project.
As the project progresses the BAC value is likely to change - usually increasinly.',
	'',
	'BAC',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("09c1f37a-f6c2-4344-aeca-73ed80112736",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("09c1f37a-f6c2-4344-aeca-73ed80112736",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("09c1f37a-f6c2-4344-aeca-73ed80112736",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"76434f9b-b069-4b88-92d7-3a523a006d3c",
	'PV',
	'The Earned Value parameter to track Planned Value at chosen points in time during the course of a project.',
	'',
	'PV',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("7f3d898f-98c6-4b9a-8e3c-08efc1ab8c1e",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("7f3d898f-98c6-4b9a-8e3c-08efc1ab8c1e",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("7f3d898f-98c6-4b9a-8e3c-08efc1ab8c1e",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"09c1f37a-f6c2-4344-aeca-73ed80112736",
	'EV',
	'The Earned Value parameter to track the the actual Earned Value in terms of completed (planned) work at chosen points in time during the course of a project.',
	'',
	'EV',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("418331bb-6eef-4b95-8b89-20c4ac009f69",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("418331bb-6eef-4b95-8b89-20c4ac009f69",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("418331bb-6eef-4b95-8b89-20c4ac009f69",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"7f3d898f-98c6-4b9a-8e3c-08efc1ab8c1e",
	'AC',
	'The Earned Value parameter for tracking the Actual Cost of the work completed at chosen points in time during the course of a project.',
	'',
	'AC',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("420d04f5-3216-475e-9d41-864e45f30216",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("420d04f5-3216-475e-9d41-864e45f30216",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("420d04f5-3216-475e-9d41-864e45f30216",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"8672b855-9d39-445b-894f-e34005cbaadf",
	'EAC',
	'The Earned Value parameter for Estimate At Completion - calculated in several ways to provide an estimate to complete a project based on a chosen point in time using other (already calculated) Earned Value parameters.
',
	'',
	'EAC',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("a43523ec-c977-42c7-b1b8-bdaf405c2577",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("a43523ec-c977-42c7-b1b8-bdaf405c2577",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("a43523ec-c977-42c7-b1b8-bdaf405c2577",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"1eab4692-29db-48f8-a1f9-1bb36bd18cc3",
	'ETC',
	'The Earned Value parameter for Estimate To Complete - calculated as EAC - AC based on a chosen point in time typically during the latter part of a project.  Don''t really want this value to be negative.',
	'',
	'ETC',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("7b3e4961-3daa-406c-9ad9-53eff9724f04",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("7b3e4961-3daa-406c-9ad9-53eff9724f04",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("7b3e4961-3daa-406c-9ad9-53eff9724f04",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"6c344b7d-0353-4239-8e07-e704688c263a",
	'SV',
	'The Earned Value parameter fo Schedule Variance - calculate as EV - PV. Really needs to be a positive value for project to do better than the planned schedule.',
	'',
	'SV',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("6c344b7d-0353-4239-8e07-e704688c263a",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("6c344b7d-0353-4239-8e07-e704688c263a",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("6c344b7d-0353-4239-8e07-e704688c263a",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"418331bb-6eef-4b95-8b89-20c4ac009f69",
	'CV',
	'The Earned Value parameter fo Cost Variance - calculate as EV - AC. Really needs to be a positive value for project to perform within scheduled cost.',
	'',
	'CV',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("8672b855-9d39-445b-894f-e34005cbaadf",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("8672b855-9d39-445b-894f-e34005cbaadf",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("8672b855-9d39-445b-894f-e34005cbaadf",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"46ec63ed-b7fa-4269-ab84-552de9efa81d",
	'SPI',
	'The Earned Value parameter fo Schedule Performance Index - calculate as EV / PV. Really needs to be > 1.0 for project to do better than the planned schedule.',
	'',
	'SPI',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("46ec63ed-b7fa-4269-ab84-552de9efa81d",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("46ec63ed-b7fa-4269-ab84-552de9efa81d",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("46ec63ed-b7fa-4269-ab84-552de9efa81d",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"7b3e4961-3daa-406c-9ad9-53eff9724f04",
	'CPI',
	'The Earned Value parameter fo Cost Performance Index - calculate as EV / AC. Really needs to be > 1.0 for project to perform within scheduled cost.',
	'',
	'CPI',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("1eab4692-29db-48f8-a1f9-1bb36bd18cc3",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("1eab4692-29db-48f8-a1f9-1bb36bd18cc3",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("1eab4692-29db-48f8-a1f9-1bb36bd18cc3",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"420d04f5-3216-475e-9d41-864e45f30216",
	'VAC',
	'The Earned Value parameter for Vvariance At Completion - calculated as BAC - EAC based on a chosen point in time during the course of a project.  Needs to be a positive value to perform better than expected.',
	'',
	'VAC',
	0,
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("4e736cb5-235e-4c53-a0d6-778a00658620",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("4e736cb5-235e-4c53-a0d6-778a00658620",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("4e736cb5-235e-4c53-a0d6-778a00658620",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"a43523ec-c977-42c7-b1b8-bdaf405c2577",
	'Rep_ID',
	'The integer number (starting at 1) given to each successive performance report for a project.',
	'',
	'Rep_ID',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("a406f926-5945-4a0d-ac2e-1b2855263f65",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("a406f926-5945-4a0d-ac2e-1b2855263f65",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("a406f926-5945-4a0d-ac2e-1b2855263f65",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"4e736cb5-235e-4c53-a0d6-778a00658620",
	'PRJ_Name',
	'The unique name of a project.',
	'',
	'PRJ_Name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("21cb8db6-9bb0-474e-9576-b5e6fc346b92",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_BATTR
	VALUES ("21cb8db6-9bb0-474e-9576-b5e6fc346b92",
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ATTR
	VALUES ("21cb8db6-9bb0-474e-9576-b5e6fc346b92",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	"a406f926-5945-4a0d-ac2e-1b2855263f65",
	'Traffic_Light',
	'An enumerator that uses the base type of "Status_Colour" to represent the meaning of traffic
light signals: RED (Stop), AMBER (Proceed with caution) and GREEN (Go). ',
	'',
	'Traffic_Light',
	0,
	"9dc71f19-9575-423a-8869-cc0a09aa5f7d",
	'',
	'');
INSERT INTO S_DT_PROXY
	VALUES ("9dc71f19-9575-423a-8869-cc0a09aa5f7d",
	"00000000-0000-0000-0000-000000000000",
	'Status_Colour',
	'',
	'',
	'../../../../PM_Types/PM_Types.xtuml');
INSERT INTO O_ID
	VALUES (0,
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_OIDA
	VALUES ("a406f926-5945-4a0d-ac2e-1b2855263f65",
	"debe4626-cfe9-48fd-8112-e083c26efc69",
	0,
	'PRJ_Name');
INSERT INTO O_ID
	VALUES (1,
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO O_ID
	VALUES (2,
	"debe4626-cfe9-48fd-8112-e083c26efc69");
INSERT INTO PE_PE
	VALUES ("debe4626-cfe9-48fd-8112-e083c26efc69",
	1,
	"9ad079f3-abc5-417c-8b37-4084fb0e9dde",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("9ad079f3-abc5-417c-8b37-4084fb0e9dde",
	"00000000-0000-0000-0000-000000000000",
	"fed360c9-cd00-40a7-9299-ecef1edcb505",
	'PM_Control',
	'',
	0,
	'../PM_Control.xtuml');

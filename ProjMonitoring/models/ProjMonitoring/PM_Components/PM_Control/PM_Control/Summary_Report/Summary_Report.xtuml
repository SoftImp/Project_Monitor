-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("e1e375a8-101a-4533-9544-1b3ba91e8e62",
	'Summary_Report',
	12,
	'SUMREP',
	'A SUMMARY REPORT contains an indicative status in the form of a 
traffic light colour for each PROJECT in a PROGRAM.

This class is based on UC17.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("34f4e69c-3e8d-4bc9-831c-18a15ea521fa",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62",
	'Create',
	'This operation is based on UC17.',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'//Creating a Summary Report for a Program requires
//1: identifying that the chosen Program exists,
//2: identifying each Project that is associated with the Program,
//3: creating a set of instances representing the last Performance Reports of each related 
//   Project as the contents of the Summary Report,
//4: indicating overall (non-)performance of the Program in Traffic Light value percentages.

select any Program from instances of PRG
where (selected.PRG_Name == param.PRG_Name);

//relate Summary_Report to Program -> PRJ[R5.''may include''] -> PERFREP[R14.''may be recorded in''];

if (not empty Program)
	
	//Firstly select all the related Projects to the Program.
	
	select many Projects related by Program -> PRJ[R5.''may include''];
	
		//Secondly select all the related Reports to each Project.
	
		for each Project in Projects
			
			select many Reports related by Project -> PERFREP[R14.''may be recorded in''];
	
			//Finally identify the last submitted reports for each Project and add them to the Summary Report.
			//Note that a Project''s Reports are numbered sequentially from 1 as they are submitted.
	
 			last_perf_report = 0;	//Enables the search to start at Performance Report numbered 1. 
		
			for each Report in Reports
				if (Report.Rep_ID > last_perf_report)
					last_perf_report = Report.Rep_ID;
				end if;
			end for;
					
			select any Report related by Project -> PERFREP[R14.''may be recorded in''] where selected.Rep_ID == last_perf_report;
			if (not empty Report)
				select any Last_Report related by Program -> SUMREP[R18.''may be produced for'']->PERFREP[R16.''is extracted from'']
			 	 where selected.Rep_ID == last_perf_report and selected.PRJ_Name == Project.PRJ_Name;
				if (empty Last_Report)
					create object instance Summary_Report of SUMREP;
					relate Summary_Report to Report across R16.''is extracted from'';
					relate Summary_Report to Program across R18.''is produced for'';
					Summary_Report.PRJ_Name = Report.PRJ_Name;
					Summary_Report.Traffic_Light = Report.Traffic_Light;
					Summary_Report.PRG_Name = param.PRG_Name;
					Summary_Report.Date = TIM::current_date();
					LOG::LogInfo( message: "A new SUMMARY REPORT set has been successfully created." );
				end if;
			end if;
		end for;
	
	//List the RED (non-performing) Projects among the Summary Report set first.
	
	select many Sum_Reps related by Program -> SUMREP[R18.''may be produced for'']; 
	
		red_ones = 0;
		for each report in Sum_Reps
			if (report.Traffic_Light == Status_Colour::RED)
				red_ones = red_ones + 1;	
			end if;
		end for;
	
		//send OrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);
		//send PrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);
	
	LOG::LogInfo( message: "All ''RED'' Projects have been totalled." );
	
	//List the AMBER (under-performing) Projects second.
		
		amber_ones = 0;
		for each report in Sum_Reps
			if (report.Traffic_Light == Status_Colour::AMBER)
				amber_ones = amber_ones + 1;
			end if;				
		end for;
		
		//send OrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);
		//send PrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);	
	
	LOG::LogInfo( message: "All ''AMBER'' Projects have been totalled." );
	
	//List the GREEN (performing) Projects last.
		
		green_ones = 0;
		for each report in Sum_Reps
			if (report.Traffic_Light == Status_Colour::GREEN)
				green_ones = green_ones + 1;
			end if;	
		end for;
		
		//send OrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);
		//send PrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);		
	
	LOG::LogInfo( message: "All ''GREEN'' Projects have been totalled." );
	
	//Determine the total number of projects being reported in this summary report.
		
		total = red_ones + amber_ones + green_ones;
	
	//Provide an indication of degree of (non-)performance of the overal program for which this Summary Report has been prepared.		
	
	LOG::LogInteger( message:red_ones); LOG::LogInfo( message: " out of " ); LOG::LogInteger( message:total); LOG::LogInfo( message: " are NOT PERFORMING WELL." );
	PrgMan::Notify_Performance( Relevant_Person:"Manager", TL_Type_Num: red_ones, Message_Part1:" out of ", TL_Total: total, Message_Part2:" are NOT PERFORMING WELL." );
	LOG::LogInteger( message:amber_ones); LOG::LogInfo( message: " out of " ); LOG::LogInteger( message:total); LOG::LogInfo( message: " are UNDER-PERFORMING." );
	PrgMan::Notify_Performance( Relevant_Person:"Manager", TL_Type_Num: amber_ones, Message_Part1:" out of ", TL_Total: total, Message_Part2:" are UNDER-PERFORMING." );
	LOG::LogInteger( message:green_ones); LOG::LogInfo( message: " out of " ); LOG::LogInteger( message:total); LOG::LogInfo( message: " are PERFORMING WELL." );
	PrgMan::Notify_Performance( Relevant_Person:"Manager", TL_Type_Num: green_ones, Message_Part1:" out of ", TL_Total: total, Message_Part2:" are PERFORMING WELL." );
	
else
	
	LOG::LogFailure( message: "The chosen PROGRAM NAME " + param.PRG_Name + " does not exist.  Please choose a NAME from those that already exist." );

end if;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0,
	1);
INSERT INTO O_TPARM
	VALUES ("985a14e1-dcf1-4f86-ae49-4ded3e93397f",
	"34f4e69c-3e8d-4bc9-831c-18a15ea521fa",
	'PRG_Name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("cf160401-1418-4566-b3eb-c46e44ca2289",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62",
	'browse_Performance',
	'This operation is based on UC18.',
	"ba5eda7a-def5-0000-0000-000000000000",
	0,
	'//Extract a summary report set to see more detail of projects based on performance rating.
//Performance rating is determined by Traffic Light Colour (TL_Colour)
	
select many Sum_Reps from instances of SUMREP
 where (selected.PRG_Name == param.PRG_Name and selected.Date == param.Date_Of_Report and selected.Traffic_Light == param.TL_Colour);
 
 	if (param.TL_Colour == Status_Colour::RED)
 		LOG::LogInfo( message: "The following Projects are not performing well." );
 		
 	elif (param.TL_Colour == Status_Colour::AMBER)
 		LOG::LogInfo( message: "The following Projects are under-performing well." );
 	
 	else
 		LOG::LogInfo( message: "The following Projects are performing well." );
 	end if;
	
	for each report in Sum_Reps		
			send OrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);
			send PrgMan::Report(Relevant_Person:"Manager", PRG_Name:param.PRG_Name, PRJ_Name:report.PRJ_Name, Traffic_Light:report.Traffic_Light);
	end for;',
	1,
	'',
	"34f4e69c-3e8d-4bc9-831c-18a15ea521fa",
	0,
	2);
INSERT INTO O_TPARM
	VALUES ("5d8e07f4-4dbc-4d75-b2fb-45dd541ea35f",
	"cf160401-1418-4566-b3eb-c46e44ca2289",
	'PRG_Name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("6e6a46de-dbb3-4f34-96e6-cffb6ad95034",
	"cf160401-1418-4566-b3eb-c46e44ca2289",
	'Date_Of_Report',
	"ba5eda7a-def5-0000-0000-00000000000e",
	0,
	'',
	"5d8e07f4-4dbc-4d75-b2fb-45dd541ea35f",
	'');
INSERT INTO O_TPARM
	VALUES ("e92b2a12-90dd-491b-85c1-6ad123c833a7",
	"cf160401-1418-4566-b3eb-c46e44ca2289",
	'TL_Colour',
	"9dc71f19-9575-423a-8869-cc0a09aa5f7d",
	0,
	'',
	"6e6a46de-dbb3-4f34-96e6-cffb6ad95034",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("9dc71f19-9575-423a-8869-cc0a09aa5f7d",
	"00000000-0000-0000-0000-000000000000",
	'Status_Colour',
	'',
	'',
	'../../../../PM_Types/PM_Types.xtuml');
INSERT INTO O_NBATTR
	VALUES ("6dd0554d-00b1-416b-a094-2449217f2305",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_BATTR
	VALUES ("6dd0554d-00b1-416b-a094-2449217f2305",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_ATTR
	VALUES ("6dd0554d-00b1-416b-a094-2449217f2305",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62",
	"00000000-0000-0000-0000-000000000000",
	'Traffic_Light',
	'',
	'',
	'Traffic_Light',
	0,
	"9dc71f19-9575-423a-8869-cc0a09aa5f7d",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("0798fb39-e8ac-450a-95cf-7377d82d55f7",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_BATTR
	VALUES ("0798fb39-e8ac-450a-95cf-7377d82d55f7",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_ATTR
	VALUES ("0798fb39-e8ac-450a-95cf-7377d82d55f7",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62",
	"6dd0554d-00b1-416b-a094-2449217f2305",
	'PRG_Name',
	'',
	'',
	'PRG_Name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("294cc165-fad4-4a7a-9723-fd32c43a60e1",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_BATTR
	VALUES ("294cc165-fad4-4a7a-9723-fd32c43a60e1",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_ATTR
	VALUES ("294cc165-fad4-4a7a-9723-fd32c43a60e1",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62",
	"0798fb39-e8ac-450a-95cf-7377d82d55f7",
	'Date',
	'',
	'',
	'Date',
	0,
	"ba5eda7a-def5-0000-0000-00000000000e",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("0129ceaf-3c3f-4017-8a5c-8380a5bf30a2",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_BATTR
	VALUES ("0129ceaf-3c3f-4017-8a5c-8380a5bf30a2",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_ATTR
	VALUES ("0129ceaf-3c3f-4017-8a5c-8380a5bf30a2",
	"e1e375a8-101a-4533-9544-1b3ba91e8e62",
	"294cc165-fad4-4a7a-9723-fd32c43a60e1",
	'PRJ_Name',
	'',
	'',
	'PRJ_Name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_ID
	VALUES (1,
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO O_ID
	VALUES (2,
	"e1e375a8-101a-4533-9544-1b3ba91e8e62");
INSERT INTO PE_PE
	VALUES ("e1e375a8-101a-4533-9544-1b3ba91e8e62",
	1,
	"9ad079f3-abc5-417c-8b37-4084fb0e9dde",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("9ad079f3-abc5-417c-8b37-4084fb0e9dde",
	"00000000-0000-0000-0000-000000000000",
	"fed360c9-cd00-40a7-9299-ecef1edcb505",
	'PM_Control',
	'',
	0,
	'../PM_Control.xtuml');
